{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react/newtodolist1/src/App.js\";\nimport React, { useState } from \"react\";\nimport Todolist from \"./Todolist\";\nimport AddinTodo from \"./AddinTodo\";\nimport Findintodo from \"./Findintodo\";\nimport Menubutton from \"./Menubutton\";\nimport \"./App.css\";\n\nfunction App() {\n  const [checkbutton, setCheckbutton] = useState(\"\");\n  const [keyWord, setKeyWord] = useState(\"\");\n  const [todolist, setTodolist] = useState([{\n    content: \"go home\",\n    id: 1,\n    checked: false,\n    backlight: \"notselected\",\n    status: \"active\"\n  }]);\n\n  const compareWord = word => {\n    setKeyWord(word);\n  };\n\n  const DeleteTodo = id => {\n    const todos = todolist.filter(todo => {\n      return todo.id !== id;\n    });\n    setTodolist(todos);\n  };\n\n  const Addnewtodo = todo => {\n    const newTodo = {\n      content: todo,\n      id: Math.random(),\n      status: \"active\",\n      checked: false,\n      backlight: \"notselected\"\n    };\n    setTodolist(prevState => [...prevState, newTodo]);\n  };\n\n  const HandleChange = e => {\n    setTodolist(prevState => [...prevState, e.target.value]);\n  };\n\n  const complitedButton = () => {\n    //todolist.checkbutton = \"complite\";\n    setCheckbutton(prevState => ({ ...prevState,\n      checkbutton: \"complite\"\n    }));\n  };\n\n  const activeButton = () => {\n    // todolist.checkbutton = \"active\";\n    setCheckbutton(prevState => ({ ...prevState,\n      checkbutton: \"active\"\n    }));\n  };\n\n  const allButton = () => {\n    // todolist.checkbutton = \"\";\n    setCheckbutton(prevState => ({ ...prevState,\n      checkbutton: \"\"\n    }));\n  };\n\n  const handleCheckbox = id => {\n    const todos = [...todolist];\n    todos.forEach(todo => {\n      if (todo.id === id) {\n        if (todo.checked === false) {\n          todo.checked = true;\n          todo.backlight = \"selected\";\n        } else {\n          todo.checked = false;\n          todo.backlight = \"unselected\";\n        }\n      }\n    });\n    setTodolist(todos);\n  };\n\n  let FilteredTodo = todolist.filter(todo => todo.content.includes(keyWord));\n\n  if (checkbutton === \"complite\") {\n    console.log(\"complited\"); //FilteredTodo = todolist.filter(todo => todo.checked === true);\n  } else if (checkbutton === \"active\") {\n    console.log(\"active\"); //FilteredTodo = todolist.filter(todo => todo.checked === false);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Allpage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Todos\"))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Findintodo, {\n    compareWord: compareWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Todolist, {\n    todos: FilteredTodo,\n    DeleteTodo: DeleteTodo,\n    handleCheckbox: handleCheckbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(AddinTodo, {\n    Addnewtodo: Addnewtodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Menubutton, {\n    complitedButton: complitedButton,\n    activeButton: activeButton,\n    allButton: allButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/react/newtodolist1/src/App.js"],"names":["React","useState","Todolist","AddinTodo","Findintodo","Menubutton","App","checkbutton","setCheckbutton","keyWord","setKeyWord","todolist","setTodolist","content","id","checked","backlight","status","compareWord","word","DeleteTodo","todos","filter","todo","Addnewtodo","newTodo","Math","random","prevState","HandleChange","e","target","value","complitedButton","activeButton","allButton","handleCheckbox","forEach","FilteredTodo","includes","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Todolist from \"./Todolist\";\nimport AddinTodo from \"./AddinTodo\";\nimport Findintodo from \"./Findintodo\";\nimport Menubutton from \"./Menubutton\";\nimport \"./App.css\";\n\nfunction App() {\n  const [checkbutton, setCheckbutton] = useState(\"\");\n  const [keyWord, setKeyWord] = useState(\"\");\n  const [todolist, setTodolist] = useState([\n    {\n      content: \"go home\",\n      id: 1,\n      checked: false,\n      backlight: \"notselected\",\n      status: \"active\"\n    }\n  ]);\n\n  const compareWord = word => {\n    setKeyWord(word);\n  };\n\n  const DeleteTodo = id => {\n    const todos = todolist.filter(todo => {\n      return todo.id !== id;\n    });\n    setTodolist(todos);\n  };\n  const Addnewtodo = todo => {\n    const newTodo = {\n      content: todo,\n      id: Math.random(),\n      status: \"active\",\n      checked: false,\n      backlight: \"notselected\"\n    };\n\n    setTodolist(prevState => [...prevState, newTodo]);\n  };\n  const HandleChange = e => {\n    setTodolist(prevState => [...prevState, e.target.value]);\n  };\n\n  const complitedButton = () => {\n    //todolist.checkbutton = \"complite\";\n    setCheckbutton(prevState => ({ ...prevState, checkbutton: \"complite\" }));\n  };\n  const activeButton = () => {\n    // todolist.checkbutton = \"active\";\n    setCheckbutton(prevState => ({ ...prevState, checkbutton: \"active\" }));\n  };\n\n  const allButton = () => {\n    // todolist.checkbutton = \"\";\n    setCheckbutton(prevState => ({ ...prevState, checkbutton: \"\" }));\n  };\n\n  const handleCheckbox = id => {\n    const todos = [...todolist];\n    todos.forEach(todo => {\n      if (todo.id === id) {\n        if (todo.checked === false) {\n          todo.checked = true;\n          todo.backlight = \"selected\";\n        } else {\n          todo.checked = false;\n          todo.backlight = \"unselected\";\n        }\n      }\n    });\n    setTodolist(todos);\n  };\n\n  let FilteredTodo = todolist.filter(todo => todo.content.includes(keyWord));\n\n  if (checkbutton === \"complite\") {\n    console.log(\"complited\");\n    //FilteredTodo = todolist.filter(todo => todo.checked === true);\n  } else if (checkbutton === \"active\") {\n    console.log(\"active\");\n    //FilteredTodo = todolist.filter(todo => todo.checked === false);\n  }\n\n  return (\n    <div className=\"Allpage\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>Todos</h1>\n        </div>\n      </div>\n      <div className=\"container\">\n        <Findintodo compareWord={compareWord} />\n        <Todolist\n          todos={FilteredTodo}\n          DeleteTodo={DeleteTodo}\n          handleCheckbox={handleCheckbox}\n        />\n\n        <AddinTodo Addnewtodo={Addnewtodo} />\n        {\n          <Menubutton\n            complitedButton={complitedButton}\n            activeButton={activeButton}\n            allButton={allButton}\n          />\n        }\n      </div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}