{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react/newtodolist1/src/App.js\";\nimport React, { useState } from \"react\"; // import Todolist from \"./Todolist\";\n// import AddinTodo from \"./AddinTodo\";\n// import Findintodo from \"./Findintodo\";\n// import Menubutton from \"./Menubutton\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [checkbutton, setCheckbutton] = useState(\"\");\n  const [keyWord, setKeyWord] = useState(\"\");\n  const [todolist, setTodolist] = useState({\n    content: \"go home\",\n    id: 1,\n    checked: false,\n    backlight: \"notselected\",\n    status: \"active\"\n  });\n\n  compareWord = word => {\n    setKeyWord(word);\n  };\n\n  DeleteTodo = id => {\n    const todos = todolist.filter(todo => {\n      return todolist.id !== id;\n    });\n    setTodolist(todos);\n  }; // Addnewtodo = todo => {\n  //   todo.id = Math.random();\n  //   todo.checked = false;\n  //   todo.backlight = \"notselected\";\n  //   todo.status = \"active\";\n  //   const todos = [...this.state.todos, todo];\n  //   this.setState({\n  //     todos\n  //   });\n  // };\n\n\n  HandleChange = e => {\n    todolistState([...todolist, {\n      content: e.target.value\n    }]);\n  };\n\n  handleCheckbox = id => {\n    const todos = [...todolist];\n    todos.forEach(todo => {\n      if (todo.id === id) {\n        if (todo.checked === false) {\n          {\n            checked: true;\n\n            backlight: true;\n          }\n        } else {\n          checked: false;\n\n          acklight: \"unselected\";\n        }\n      }\n    });\n    this.setState({\n      todos\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Allpage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Todos\"))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Findintodo, {\n    compareWord: this.compareWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Todolist, {\n    todos: FilteredTodo,\n    DeleteTodo: this.DeleteTodo,\n    handleCheckbox: this.handleCheckbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(AddinTodo, {\n    Addnewtodo: this.Addnewtodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Menubutton, {\n    complitedButton: this.complitedButton,\n    activeButton: this.activeButton,\n    allButton: this.allButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n} // compareWord = word => {\n//   this.setState({\n//     keyWord: word\n//   });\n// };\n// DeleteTodo = id => {\n//   const todos = this.state.todos.filter(todo => {\n//     return todo.id !== id;\n//   });\n//   this.setState({\n//     todos\n//   });\n// };\n// Addnewtodo = todo => {\n//   todo.id = Math.random();\n//   todo.checked = false;\n//   todo.backlight = \"notselected\";\n//   todo.status = \"active\";\n//   const todos = [...this.state.todos, todo];\n//   this.setState({\n//     todos\n//   });\n// };\n// HandleChange = e => {\n//   this.setState({\n//     content: e.target.value\n//   });\n// };\n// complitedButton = () => {\n//   //this.state.checkbutton = \"complite\";\n//   this.setState(prevState => ({ ...prevState, checkbutton: \"complite\" }));\n// };\n// activeButton = () => {\n//   // this.state.checkbutton = \"active\";\n//   this.setState(prevState => ({ ...prevState, checkbutton: \"active\" }));\n// };\n// allButton = () => {\n//   // this.state.checkbutton = \"\";\n//   this.setState(prevState => ({ ...prevState, checkbutton: \"\" }));\n// };\n// handleCheckbox = id => {\n//   const todos = [...this.state.todos];\n//   todos.forEach(todo => {\n//     if (todo.id === id) {\n//       if (todo.checked === false) {\n//         todo.checked = true;\n//         todo.backlight = \"selected\";\n//       } else {\n//         todo.checked = false;\n//         todo.backlight = \"unselected\";\n//       }\n//     }\n//   });\n//   this.setState({\n//     todos\n//   });\n// };\n//   let FilteredTodo = this.state.todos.filter(todo => {\n//     //console.log(this.state.keyWord);\n//     return todo.content.includes(this.state.keyWord);\n//   });\n//   if (this.state.checkbutton === \"complite\") {\n//     FilteredTodo = this.state.todos.filter(todo => todo.checked === true);\n//   } else if (this.state.checkbutton === \"active\") {\n//     FilteredTodo = this.state.todos.filter(todo => todo.checked === false);\n//   }\n//   return (\n//     <div className=\"Allpage\">\n//       <div className=\"container\">\n//         <div className=\"header\">\n//           <h1>Todos</h1>\n//         </div>\n//       </div>\n//       {/* <div className=\"container\">\n//         <Findintodo compareWord={this.compareWord} />\n//         <Todolist\n//           todos={FilteredTodo}\n//           DeleteTodo={this.DeleteTodo}\n//           handleCheckbox={this.handleCheckbox}\n//         />\n//         <AddinTodo Addnewtodo={this.Addnewtodo} />\n//         <Menubutton\n//           complitedButton={this.complitedButton}\n//           activeButton={this.activeButton}\n//           allButton={this.allButton}\n//         />\n//       </div> }\n//     {/* </div> */}\n//   );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/react/newtodolist1/src/App.js"],"names":["React","useState","App","checkbutton","setCheckbutton","keyWord","setKeyWord","todolist","setTodolist","content","id","checked","backlight","status","compareWord","word","DeleteTodo","todos","filter","todo","HandleChange","e","todolistState","target","value","handleCheckbox","forEach","acklight","setState","FilteredTodo","Addnewtodo","complitedButton","activeButton","allButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import Todolist from \"./Todolist\";\n// import AddinTodo from \"./AddinTodo\";\n// import Findintodo from \"./Findintodo\";\n// import Menubutton from \"./Menubutton\";\nimport \"./App.css\";\n\nfunction App() {\n  const [checkbutton, setCheckbutton] = useState(\"\");\n  const [keyWord, setKeyWord] = useState(\"\");\n  const [todolist, setTodolist] = useState({\n    content: \"go home\",\n    id: 1,\n    checked: false,\n    backlight: \"notselected\",\n    status: \"active\"\n  });\n\n  compareWord = word => {\n    setKeyWord(word);\n  };\n\n  DeleteTodo = id => {\n    const todos = todolist.filter(todo => {\n      return todolist.id !== id;\n    });\n    setTodolist(todos);\n  };\n\n  // Addnewtodo = todo => {\n  //   todo.id = Math.random();\n  //   todo.checked = false;\n  //   todo.backlight = \"notselected\";\n  //   todo.status = \"active\";\n  //   const todos = [...this.state.todos, todo];\n  //   this.setState({\n  //     todos\n  //   });\n  // };\n\n  HandleChange = e => {\n    todolistState([\n      ...todolist,\n      {\n        content: e.target.value\n      }\n    ]);\n  };\n\n  handleCheckbox = id => {\n    const todos = [...todolist];\n    todos.forEach(todo => {\n      if (todo.id === id) {\n        if (todo.checked === false) {\n          {\n            checked: true;\n            backlight: true;\n          }\n        } else {\n          checked: false;\n          acklight: \"unselected\";\n        }\n      }\n    });\n    this.setState({\n      todos\n    });\n  };\n\n  return (\n    <div className=\"Allpage\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>Todos</h1>\n        </div>\n      </div>\n      <div className=\"container\">\n        <Findintodo compareWord={this.compareWord} />\n        <Todolist\n          todos={FilteredTodo}\n          DeleteTodo={this.DeleteTodo}\n          handleCheckbox={this.handleCheckbox}\n        />\n\n        <AddinTodo Addnewtodo={this.Addnewtodo} />\n        <Menubutton\n          complitedButton={this.complitedButton}\n          activeButton={this.activeButton}\n          allButton={this.allButton}\n        />\n      </div>\n    </div>\n  );\n}\n\n// compareWord = word => {\n//   this.setState({\n//     keyWord: word\n//   });\n// };\n\n// DeleteTodo = id => {\n//   const todos = this.state.todos.filter(todo => {\n//     return todo.id !== id;\n//   });\n//   this.setState({\n//     todos\n//   });\n// };\n// Addnewtodo = todo => {\n//   todo.id = Math.random();\n//   todo.checked = false;\n//   todo.backlight = \"notselected\";\n//   todo.status = \"active\";\n//   const todos = [...this.state.todos, todo];\n//   this.setState({\n//     todos\n//   });\n// };\n// HandleChange = e => {\n//   this.setState({\n//     content: e.target.value\n//   });\n// };\n\n// complitedButton = () => {\n//   //this.state.checkbutton = \"complite\";\n//   this.setState(prevState => ({ ...prevState, checkbutton: \"complite\" }));\n// };\n// activeButton = () => {\n//   // this.state.checkbutton = \"active\";\n//   this.setState(prevState => ({ ...prevState, checkbutton: \"active\" }));\n// };\n\n// allButton = () => {\n//   // this.state.checkbutton = \"\";\n//   this.setState(prevState => ({ ...prevState, checkbutton: \"\" }));\n// };\n\n// handleCheckbox = id => {\n//   const todos = [...this.state.todos];\n//   todos.forEach(todo => {\n//     if (todo.id === id) {\n//       if (todo.checked === false) {\n//         todo.checked = true;\n//         todo.backlight = \"selected\";\n//       } else {\n//         todo.checked = false;\n//         todo.backlight = \"unselected\";\n//       }\n//     }\n//   });\n//   this.setState({\n//     todos\n//   });\n// };\n\n//   let FilteredTodo = this.state.todos.filter(todo => {\n//     //console.log(this.state.keyWord);\n\n//     return todo.content.includes(this.state.keyWord);\n//   });\n//   if (this.state.checkbutton === \"complite\") {\n//     FilteredTodo = this.state.todos.filter(todo => todo.checked === true);\n//   } else if (this.state.checkbutton === \"active\") {\n//     FilteredTodo = this.state.todos.filter(todo => todo.checked === false);\n//   }\n\n//   return (\n//     <div className=\"Allpage\">\n//       <div className=\"container\">\n//         <div className=\"header\">\n//           <h1>Todos</h1>\n//         </div>\n//       </div>\n//       {/* <div className=\"container\">\n//         <Findintodo compareWord={this.compareWord} />\n//         <Todolist\n//           todos={FilteredTodo}\n//           DeleteTodo={this.DeleteTodo}\n//           handleCheckbox={this.handleCheckbox}\n//         />\n\n//         <AddinTodo Addnewtodo={this.Addnewtodo} />\n//         <Menubutton\n//           complitedButton={this.complitedButton}\n//           activeButton={this.activeButton}\n//           allButton={this.allButton}\n//         />\n//       </div> }\n//     {/* </div> */}\n//   );\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}