{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react/newtodolist1/src/App.js\";\nimport React, { useState } from \"react\";\nimport Todolist from \"./Todolist\";\nimport AddinTodo from \"./AddinTodo\";\nimport Findintodo from \"./Findintodo\";\nimport Menubutton from \"./Menubutton\";\nimport \"./App.css\";\n\nfunction App() {\n  const [checkbutton, setCheckbutton] = useState(\"\");\n  const [keyWord, setKeyWord] = useState(\"\");\n  const [todolist, setTodolist] = useState({\n    content: \"go home\",\n    id: 1,\n    checked: false,\n    backlight: \"notselected\",\n    status: \"active\"\n  });\n\n  compareWord = word => {\n    setKeyWord(word);\n  };\n\n  DeleteTodo = id => {\n    const todos = todolist.filter(todo => {\n      return todo.id !== id;\n    });\n    setTodolist({\n      todos\n    });\n  };\n\n  Addnewtodo = todo => {\n    todo.id = Math.random();\n    todo.checked = false;\n    todo.backlight = \"notselected\";\n    todo.status = \"active\";\n    const todos = [...todolist, todo];\n    setTodolist({\n      todos\n    });\n  };\n\n  HandleChange = e => {\n    setTodolist([...todolist, {\n      content: e.target.value\n    }]);\n  };\n\n  complitedButton = () => {\n    //todolist.checkbutton = \"complite\";\n    setState(prevState => ({ ...prevState,\n      checkbutton: \"complite\"\n    }));\n  };\n\n  activeButton = () => {\n    // todolist.checkbutton = \"active\";\n    setState(prevState => ({ ...prevState,\n      checkbutton: \"active\"\n    }));\n  };\n\n  allButton = () => {\n    // todolist.checkbutton = \"\";\n    setState(prevState => ({ ...prevState,\n      checkbutton: \"\"\n    }));\n  };\n\n  handleCheckbox = id => {\n    const todos = [...todolist];\n    todos.forEach(todo => {\n      if (todo.id === id) {\n        if (todo.checked === false) {\n          todo.checked = true;\n          todo.backlight = \"selected\";\n        } else {\n          todo.checked = false;\n          todo.backlight = \"unselected\";\n        }\n      }\n    });\n    setTodolist({\n      todos\n    });\n  };\n\n  let FilteredTodo = todolist.todos.filter(todo => {\n    //console.log(todolist.keyWord);\n    return todo.content.includes(todolist.keyWord);\n  });\n\n  if (todolist.checkbutton === \"complite\") {\n    FilteredTodo = todolist.todos.filter(todo => todo.checked === true);\n  } else if (todolist.checkbutton === \"active\") {\n    FilteredTodo = todolist.todos.filter(todo => todo.checked === false);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Allpage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Todos\"))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Findintodo, {\n    compareWord: compareWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Todolist, {\n    todos: FilteredTodo,\n    DeleteTodo: DeleteTodo,\n    handleCheckbox: handleCheckbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(AddinTodo, {\n    Addnewtodo: Addnewtodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Menubutton, {\n    complitedButton: complitedButton,\n    activeButton: activeButton,\n    allButton: allButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/react/newtodolist1/src/App.js"],"names":["React","useState","Todolist","AddinTodo","Findintodo","Menubutton","App","checkbutton","setCheckbutton","keyWord","setKeyWord","todolist","setTodolist","content","id","checked","backlight","status","compareWord","word","DeleteTodo","todos","filter","todo","Addnewtodo","Math","random","HandleChange","e","target","value","complitedButton","setState","prevState","activeButton","allButton","handleCheckbox","forEach","FilteredTodo","includes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Todolist from \"./Todolist\";\nimport AddinTodo from \"./AddinTodo\";\nimport Findintodo from \"./Findintodo\";\nimport Menubutton from \"./Menubutton\";\nimport \"./App.css\";\n\nfunction App() {\n  const [checkbutton, setCheckbutton] = useState(\"\");\n  const [keyWord, setKeyWord] = useState(\"\");\n  const [todolist, setTodolist] = useState({\n    content: \"go home\",\n    id: 1,\n    checked: false,\n    backlight: \"notselected\",\n    status: \"active\"\n  });\n\n  compareWord = word => {\n    setKeyWord(word);\n  };\n\n  DeleteTodo = id => {\n    const todos = todolist.filter(todo => {\n      return todo.id !== id;\n    });\n    setTodolist({\n      todos\n    });\n  };\n  Addnewtodo = todo => {\n    todo.id = Math.random();\n    todo.checked = false;\n    todo.backlight = \"notselected\";\n    todo.status = \"active\";\n    const todos = [...todolist, todo];\n    setTodolist({\n      todos\n    });\n  };\n  HandleChange = e => {\n    setTodolist([\n      ...todolist,\n      {\n        content: e.target.value\n      }\n    ]);\n  };\n\n  complitedButton = () => {\n    //todolist.checkbutton = \"complite\";\n    setState(prevState => ({ ...prevState, checkbutton: \"complite\" }));\n  };\n  activeButton = () => {\n    // todolist.checkbutton = \"active\";\n    setState(prevState => ({ ...prevState, checkbutton: \"active\" }));\n  };\n\n  allButton = () => {\n    // todolist.checkbutton = \"\";\n    setState(prevState => ({ ...prevState, checkbutton: \"\" }));\n  };\n\n  handleCheckbox = id => {\n    const todos = [...todolist];\n    todos.forEach(todo => {\n      if (todo.id === id) {\n        if (todo.checked === false) {\n          todo.checked = true;\n          todo.backlight = \"selected\";\n        } else {\n          todo.checked = false;\n          todo.backlight = \"unselected\";\n        }\n      }\n    });\n    setTodolist({\n      todos\n    });\n  };\n\n  let FilteredTodo = todolist.todos.filter(todo => {\n    //console.log(todolist.keyWord);\n\n    return todo.content.includes(todolist.keyWord);\n  });\n  if (todolist.checkbutton === \"complite\") {\n    FilteredTodo = todolist.todos.filter(todo => todo.checked === true);\n  } else if (todolist.checkbutton === \"active\") {\n    FilteredTodo = todolist.todos.filter(todo => todo.checked === false);\n  }\n\n  return (\n    <div className=\"Allpage\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>Todos</h1>\n        </div>\n      </div>\n      <div className=\"container\">\n        <Findintodo compareWord={compareWord} />\n        <Todolist\n          todos={FilteredTodo}\n          DeleteTodo={DeleteTodo}\n          handleCheckbox={handleCheckbox}\n        />\n\n        <AddinTodo Addnewtodo={Addnewtodo} />\n        <Menubutton\n          complitedButton={complitedButton}\n          activeButton={activeButton}\n          allButton={allButton}\n        />\n      </div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}