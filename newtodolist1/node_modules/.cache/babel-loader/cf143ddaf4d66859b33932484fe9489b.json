{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react/newtodolist1/src/App.js\";\nimport React, { Component } from \"react\";\nimport Todolist from \"./Todolist\";\nimport AddinTodo from \"./AddinTodo\";\nimport Findintodo from \"./Findintodo\";\nimport Menubutton from \"./Menubutton\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkbutton: \"\",\n      keyWord: \"\",\n      todos: [{\n        content: \"go home\",\n        id: 1,\n        checked: false,\n        backlight: \"notselected\",\n        status: \"active\"\n      }, {\n        content: \"avc\",\n        id: 2,\n        checked: false,\n        backlight: \"notselected\",\n        status: \"active\"\n      }]\n    };\n\n    this.compareWord = word => {\n      this.setState({\n        keyWord: word\n      });\n    };\n\n    this.DeleteTodo = id => {\n      const todos = this.state.todos.filter(todo => {\n        return todo.id !== id;\n      });\n      this.setState({\n        todos\n      });\n    };\n\n    this.Addnewtodo = todo => {\n      todo.id = Math.random();\n      todo.checked = false;\n      todo.backlight = \"notselected\";\n      todo.status = \"active\";\n      const todos = [...this.state.todos, todo];\n      this.setState({\n        todos\n      });\n    };\n\n    this.HandleChange = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    this.complitedButton = () => {\n      this.state.checkbutton = \"complite\";\n      console.log(this.state.checkbutton);\n    };\n\n    this.activeButton = () => {\n      this.state.checkbutton = \"active\";\n      console.log(this.state.checkbutton);\n    };\n\n    this.handleCheckbox = id => {\n      const todos = [...this.state.todos];\n      todos.forEach(todo => {\n        if (todo.id === id) {\n          if (todo.checked === false) {\n            todo.checked = true;\n            todo.backlight = \"selected\";\n          } else {\n            todo.checked = false;\n            todo.backlight = \"unselected\";\n          }\n        }\n      });\n      this.setState({\n        todos\n      });\n    };\n  }\n\n  render() {\n    let FilteredTodo = this.state.todos.filter(todo => {\n      //console.log(this.state.keyWord);\n      return todo.content.includes(this.state.keyWord);\n    });\n\n    if (this.state.checkbutton === \"complite\") {\n      FilteredTodo = this.state.todos.filter(todo => todo.checked === true);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Allpage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Todos\"))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Findintodo, {\n      compareWord: this.compareWord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Todolist, {\n      todos: FilteredTodo,\n      DeleteTodo: this.DeleteTodo,\n      handleCheckbox: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(AddinTodo, {\n      Addnewtodo: this.Addnewtodo,\n      activeButton: this.activeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Menubutton, {\n      complitedButton: this.complitedButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/react/newtodolist1/src/App.js"],"names":["React","Component","Todolist","AddinTodo","Findintodo","Menubutton","App","state","checkbutton","keyWord","todos","content","id","checked","backlight","status","compareWord","word","setState","DeleteTodo","filter","todo","Addnewtodo","Math","random","HandleChange","e","target","value","complitedButton","console","log","activeButton","handleCheckbox","forEach","render","FilteredTodo","includes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Todolist from \"./Todolist\";\nimport AddinTodo from \"./AddinTodo\";\nimport Findintodo from \"./Findintodo\";\nimport Menubutton from \"./Menubutton\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    checkbutton: \"\",\n    keyWord: \"\",\n    todos: [\n      {\n        content: \"go home\",\n        id: 1,\n        checked: false,\n        backlight: \"notselected\",\n        status: \"active\"\n      },\n      {\n        content: \"avc\",\n        id: 2,\n        checked: false,\n        backlight: \"notselected\",\n        status: \"active\"\n      }\n    ]\n  };\n\n  compareWord = word => {\n    this.setState({\n      keyWord: word\n    });\n  };\n\n  DeleteTodo = id => {\n    const todos = this.state.todos.filter(todo => {\n      return todo.id !== id;\n    });\n    this.setState({\n      todos\n    });\n  };\n  Addnewtodo = todo => {\n    todo.id = Math.random();\n    todo.checked = false;\n    todo.backlight = \"notselected\";\n    todo.status = \"active\";\n    const todos = [...this.state.todos, todo];\n    this.setState({\n      todos\n    });\n  };\n  HandleChange = e => {\n    this.setState({\n      content: e.target.value\n    });\n  };\n\n  complitedButton = () => {\n    this.state.checkbutton = \"complite\";\n    console.log(this.state.checkbutton);\n  };\n  activeButton = () => {\n    this.state.checkbutton = \"active\";\n    console.log(this.state.checkbutton);\n  };\n\n  handleCheckbox = id => {\n    const todos = [...this.state.todos];\n    todos.forEach(todo => {\n      if (todo.id === id) {\n        if (todo.checked === false) {\n          todo.checked = true;\n          todo.backlight = \"selected\";\n        } else {\n          todo.checked = false;\n          todo.backlight = \"unselected\";\n        }\n      }\n    });\n    this.setState({\n      todos\n    });\n  };\n\n  render() {\n    let FilteredTodo = this.state.todos.filter(todo => {\n      //console.log(this.state.keyWord);\n\n      return todo.content.includes(this.state.keyWord);\n    });\n    if (this.state.checkbutton === \"complite\") {\n      FilteredTodo = this.state.todos.filter(todo => todo.checked === true);\n    }\n\n    return (\n      <div className=\"Allpage\">\n        <div className=\"container\">\n          <div className=\"header\">\n            <h1>Todos</h1>\n          </div>\n        </div>\n        <div className=\"container\">\n          <Findintodo compareWord={this.compareWord} />\n          <Todolist\n            todos={FilteredTodo}\n            DeleteTodo={this.DeleteTodo}\n            handleCheckbox={this.handleCheckbox}\n          />\n\n          <AddinTodo\n            Addnewtodo={this.Addnewtodo}\n            activeButton={this.activeButton}\n          />\n          <Menubutton complitedButton={this.complitedButton} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}